// <auto-generated />
using System;
using CarRentalNovility.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRentalNovility.DataLayer.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    [Migration("20181009121911_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRentalNovility.Entities.Car", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlateNumber");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRentalNovility.Entities.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CancellationRateFee");

                    b.Property<decimal>("DepositFee");

                    b.Property<string>("Name");

                    b.Property<decimal>("RentalRateFee");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("CarRentalNovility.Entities.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CarRentalNovility.Entities.ClientAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CancellationFeePaid");

                    b.Property<decimal>("CancellationFeeValueAtBookingMoment");

                    b.Property<decimal>("DepositFeePaid");

                    b.Property<decimal>("RentalFeePaid");

                    b.Property<decimal>("RentalRateFeeValueAtBookingMoment");

                    b.HasKey("Id");

                    b.ToTable("ClientAccount");
                });

            modelBuilder.Entity("CarRentalNovility.Entities.Reservation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CarId");

                    b.Property<long?>("ClientAccountId");

                    b.Property<long?>("ClientId");

                    b.Property<DateTime>("PickUpDateTime");

                    b.Property<DateTime>("ReturnDateTime");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientAccountId");

                    b.HasIndex("ClientId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarRentalNovility.Entities.Car", b =>
                {
                    b.HasOne("CarRentalNovility.Entities.CarType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("CarRentalNovility.Entities.Reservation", b =>
                {
                    b.HasOne("CarRentalNovility.Entities.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("CarRentalNovility.Entities.ClientAccount", "ClientAccount")
                        .WithMany()
                        .HasForeignKey("ClientAccountId");

                    b.HasOne("CarRentalNovility.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");
                });
#pragma warning restore 612, 618
        }
    }
}
